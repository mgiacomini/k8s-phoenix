use Mix.Config

# For production, we often load configuration from external
# sources, such as your system environment. For this reason,
# you won't find the :http configuration below, but set inside
# ApiWeb.Endpoint.init/2 when load_from_system_env is
# true. Any dynamic configuration should be done there.
#
# Don't forget to configure the url host to something meaningful,
# Phoenix uses this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phx.digest task
# which you typically run after static files are built.

host =
  System.get_env()
  |> Map.get("ENDPOINT_HOST", "api.app.mydomain.com")
  |> String.replace("\n", "")

keyfile_name = System.get_env("GOTH_KEYFILE") || Path.join(["umbrella", "keyfiles", "dev.json"])

keyfile =
  keyfile_name
  |> String.replace("\n", "")
  |> File.read()
  |> case do
    {:ok, content} -> content
    {:error, _} -> ""
  end

config :goth, json: keyfile

config :api, Api.Endpoint,
  load_from_system_env: true,
  url: [host: host, port: 80],
  secret_key_base: System.get_env() |> Map.get("SECRET_KEY_BASE", "") |> String.replace("\n", "")

# TODO: We need generate a let's encrypt certificate to test and compare with bcredi wildcard
# url: [host: host, port: 443],
# https: [
#  :inet6,
#  port: 443,
#  keyfile: System.get_env("API_SSL_KEY_PATH"),
#  certfile: System.get_env("API_SSL_CERT_PATH"),
#  cacertfile: System.get_env("API_SSL_CA_CERT_PATH"),
# ],
# force_ssl: [hsts: true],

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :api, ApiWeb.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [:inet6,
#               port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :api, ApiWeb.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :api, ApiWeb.Endpoint, server: true
#

# Finally import the config/prod.secret.exs
# which should be versioned separately.
# import_config "prod.secret.exs"
